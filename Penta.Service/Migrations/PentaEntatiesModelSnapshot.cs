// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Penta.Service;

namespace Penta.Service.Migrations
{
    [DbContext(typeof(PentaEntaties))]
    partial class PentaEntatiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Penta.Service.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1000)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnteredBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("EnteredBy");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Amr",
                            Password = "Amr",
                            Username = "developer.younis@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kareem",
                            Password = "Kareem",
                            Username = "Kiibrahim@momra.gov.sa"
                        });
                });

            modelBuilder.Entity("Penta.Service.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Privileges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Add"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Search"
                        });
                });

            modelBuilder.Entity("Penta.Service.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Entered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("EnteredBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnteredBy");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Penta.Service.Models.UserPrivilege", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PrivilegeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("UserPrivileges");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PrivilegeId = 1
                        },
                        new
                        {
                            UserId = 1,
                            PrivilegeId = 2
                        },
                        new
                        {
                            UserId = 1,
                            PrivilegeId = 3
                        },
                        new
                        {
                            UserId = 1,
                            PrivilegeId = 4
                        },
                        new
                        {
                            UserId = 2,
                            PrivilegeId = 1
                        },
                        new
                        {
                            UserId = 2,
                            PrivilegeId = 4
                        });
                });

            modelBuilder.Entity("Penta.Service.Models.ApplicationUser", b =>
                {
                    b.HasOne("Penta.Service.Models.ApplicationUser", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("EnteredBy");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Penta.Service.Models.Student", b =>
                {
                    b.HasOne("Penta.Service.Models.ApplicationUser", "User")
                        .WithMany("Students")
                        .HasForeignKey("EnteredBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Penta.Service.Models.UserPrivilege", b =>
                {
                    b.HasOne("Penta.Service.Models.Privilege", "Privilege")
                        .WithMany("Privileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Penta.Service.Models.ApplicationUser", "User")
                        .WithMany("Privileges")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Penta.Service.Models.ApplicationUser", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Privileges");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Penta.Service.Models.Privilege", b =>
                {
                    b.Navigation("Privileges");
                });
#pragma warning restore 612, 618
        }
    }
}
